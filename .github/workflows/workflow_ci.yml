name: workflow_CI
on:
  - push
  - pull_request
defaults:
  run:
    shell: bash

env:
  SnoopCompile_coverage_ENV: true

jobs:
  Simple:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        test_package:
          - ./test/TestPackage1.jl
    steps:
      - uses: actions/checkout@v2
      - name: Add SnoopCompileBot and friends
        run: |
          julia --code-coverage=user -e 'using Pkg; Pkg.develop([PackageSpec("SnoopCompileCore"), PackageSpec("SnoopCompile"), PackageSpec(; path=pwd()) ]);'
      - name: Install dependencies
        working-directory: ${{ matrix.test_package }}
        run: |
          julia --code-coverage=user --project -e 'using Pkg; Pkg.instantiate();'
          julia --code-coverage=user -e "using Pkg; Pkg.develop(PackageSpec(; path=pwd())); using SnoopCompileBot; SnoopCompileBot.addtestdep();"
      - name: Generating precompile files
        working-directory: ${{ matrix.test_package }}
        run: julia --code-coverage=user --project -e 'include("deps/SnoopCompile/snoop_bot.jl")'
      - name: Running Benchmark
        working-directory: ${{ matrix.test_package }}
        run: julia --code-coverage=user --project -e 'include("deps/SnoopCompile/snoop_bench.jl")'
      - uses: julia-actions/julia-uploadcodecov@latest
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  MultiOS:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
        test_package:
          - ./test/TestPackage2.jl
    steps:
      - uses: actions/checkout@v2
      - name: Add SnoopCompileBot and friends
        run: |
          julia --code-coverage=user -e 'using Pkg; Pkg.develop([PackageSpec("SnoopCompileCore"), PackageSpec("SnoopCompile"), PackageSpec(; path=pwd()) ]);'
      - name: Install dependencies
        working-directory: ${{ matrix.test_package }}
        run: |
          julia --code-coverage=user --project -e 'using Pkg; Pkg.instantiate();'
          julia --code-coverage=user -e "using Pkg; Pkg.develop(PackageSpec(; path=pwd())); using SnoopCompileBot; SnoopCompileBot.addtestdep();"
      - name: Generating precompile files
        working-directory: ${{ matrix.test_package }}
        run: julia --code-coverage=user --project -e 'include("deps/SnoopCompile/snoop_bot.jl")'
      - name: Running Benchmark
        working-directory: ${{ matrix.test_package }}
        run: julia --code-coverage=user --project -e 'include("deps/SnoopCompile/snoop_bench.jl")'
      - uses: julia-actions/julia-uploadcodecov@latest
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  MultiVersion:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.0.5' # WARNING: this fails
          - '1.2'
          - '1.4.2'
        test_package:
          - ./test/TestPackage3.jl
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@latest
        with:
          version: ${{ matrix.version }}
      - name: Add SnoopCompileBot and friends
        run: |
          julia --code-coverage=user -e 'using Pkg; Pkg.develop([PackageSpec("SnoopCompileCore"), PackageSpec("SnoopCompile"), PackageSpec(; path=pwd()) ]);'
      - name: Install dependencies
        working-directory: ${{ matrix.test_package }}
        run: |
          julia --code-coverage=user --project -e 'using Pkg; Pkg.instantiate();'
          julia --code-coverage=user -e "using Pkg; Pkg.develop(PackageSpec(; path=pwd())); using SnoopCompileBot; SnoopCompileBot.addtestdep();"
      - name: Generating precompile files
        working-directory: ${{ matrix.test_package }}
        run: julia --code-coverage=user --project -e 'include("deps/SnoopCompile/snoop_bot.jl")'
      - name: Running Benchmark
        working-directory: ${{ matrix.test_package }}
        run: julia --code-coverage=user --project -e 'include("deps/SnoopCompile/snoop_bench.jl")'
      - uses: julia-actions/julia-uploadcodecov@latest
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      - name: Upload all
        uses: actions/upload-artifact@v2
        with:
          path: ./

  Create_PR:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    needs: MultiVersion
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download all
        uses: actions/download-artifact@v2
      - name: SnoopCompileBot postprocess
        run: julia --code-coverage=user -e 'using Pkg; Pkg.develop(PackageSpec(; path=pwd())); using SnoopCompileBot; SnoopCompileBot.postprocess();'
      - uses: julia-actions/julia-uploadcodecov@latest
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  Skip:
    if: "contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    steps:
      - name: Skip CI ðŸš«
        run: echo skip ci
